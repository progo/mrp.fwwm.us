<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
<head>
	<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />


        <!-- standard -->
	<title>Mr. P: GNU Readline</title>


	<link rel="home" href="../../index.html" />

	<link rel="alternate" type="application/atom+xml" title="Atom 1.0" href="../../atom/index.html?section=mietteet" />
	<link rel="alternate" type="application/rss+xml" title="RSS 0.92" href="../../rss/index.html?section=mietteet" />

	<link rel="stylesheet" type="text/css" media="screen" href="../../blog.css" />
        <link rel="stylesheet" type="text/css" href="../../codeblock.css" />

            <!-- SyntaxHighlighter: http://alexgorbatchev.com -->
    <script type="text/javascript" src="../../scripts/xregexp-min.js"></script>
    <script type="text/javascript" src="../../scripts/shCore.js"></script>
    <!-- langs -->
    <script type="text/javascript" src="../../scripts/shBrushBash.js"></script>
    <script type="text/javascript" src="../../scripts/shBrushCpp.js"></script>
    <script type="text/javascript" src="../../scripts/shBrushPhp.js"></script>
    <script type="text/javascript" src="../../scripts/shBrushPerl.js"></script>
    <script type="text/javascript" src="../../scripts/shBrushPython.js"></script>
    <script type="text/javascript" src="../../scripts/shBrushClojure.js"></script>
    <script type="text/javascript" src="../../scripts/shBrushJava.js"></script>
    <script type="text/javascript" src="../../scripts/shBrushHaskell.js"></script>
    <script type="text/javascript" src="../../scripts/shBrushVimscript.js"></script>
    <script type="text/javascript">
        SyntaxHighlighter.all();
    </script>

	<link rel="EditURI" type="application/rsd+xml" title="RSD" href="../../rpc/index.html" />
</head>

<body id="mietteet">

<!-- accessibility -->
<div id="accessibility">
    <ul>
        <li><a href="gnu-readline#content">Siirry sisältöön</a></li>
        <li><a href="gnu-readline#sidebar-2">Siirry hakuun</a></li>
    </ul>
</div>

<div id="container">

<!-- head -->
    <div id="head">
        <h1 id="site-name"><a rel="home" href="../../index.html">Mr. P</a></h1>
        <p id="site-slogan">Asiaa porjoilun tuolta puolen</p>
    </div>

<!-- right -->
    <div id="sidebar-2">
        <ul class="section_list">
	<li>
            
            <a href="../../hetket/index.html">Hetkessä</a>
            
        </li>
	<li>
            
            <a href="../../matematiikka/index.html">Matematiikka</a>
            
        </li>
	<li>
            &raquo;
            <a href="../index.html">Mietteet</a>
            
                <!--<ul>
	<li>
                    
                    <a rel="bookmark" href="/mietteet/598/blogille-idea">Blogille&#160;idea</a>
                </li>
	<li>
                    
                    <a rel="bookmark" href="/mietteet/597/wes-mckinney-python-for-data-analysis-oreilly">Wes McKinney - Python For Data Analysis (O&#39;Reilly)</a>
                </li>
	<li>
                    
                    <a rel="bookmark" href="/mietteet/596/org-blogaaminen-vaikeata">Org-blogaaminen&#160;vaikeata</a>
                </li>
	<li>
                    
                    <a rel="bookmark" href="/mietteet/595/twitterointia-emacsilla">Twitteröintiä&#160;Emacsilla</a>
                </li>
	<li>
                    
                    <a rel="bookmark" href="/mietteet/594/weboodi-aikataulut-orgiin">WebOodi-aikataulut&#160;orgiin</a>
                </li>
	<li>
                    
                    <a rel="bookmark" href="/mietteet/593/emacsin-salat-alkavat-selvita-org-kovenee-ja-muita-tarinoita">Emacsin salat alkavat selvitä; org kovenee ja muita&#160;tarinoita</a>
                </li>
	<li>
                    
                    <a rel="bookmark" href="/mietteet/592/emacs-has-me">Emacs has&#160;me.</a>
                </li>
	<li>
                    
                    <a rel="bookmark" href="/mietteet/591/editorien-taistelu-tietamyshallinnassa">Editorien taistelu&#160;tietämyshallinnassa</a>
                </li>
	<li>
                    
                    <a rel="bookmark" href="/mietteet/590/think-vimorganizer">Think&#160;VimOrganizer.</a>
                </li>
	<li>
                    
                    <a rel="bookmark" href="/mietteet/589/think-orgmode">Think&#160;orgmode.</a>
                </li>
</ul>-->
            
        </li>
</ul>
<!--        <p class="sidebarhead">Aiheita:</p>
        <ul class="category_list">
	<li><a href="/kategoria/hifi/">Hifi</a></li>
	<li><a href="/kategoria/koodaus/">Ohjelmointi</a></li>
	<li><a href="/kategoria/ohjelmistot/">Ohjelmistot</a></li>
	<li><a href="/kategoria/Opiskelu/">Opiskelu</a></li>
	<li><a href="/kategoria/rauta/">Rauta</a></li>
	<li><a href="/kategoria/viihde/">Viihde</a></li>
	<li><a href="/kategoria/Yleistae-turinaa/">Yleistä turinaa</a></li>
</ul> -->

        <p class="sidebarhead">Valikoituja aiheita:</p>
        <ul class="category_list">
	<li><a href="../../tag/blogisäätöä/index.html" class="tagSizeMedium tagSize15" style="font-size: 100%;">blogisäätöä</a></li>
	<li><a href="../../tag/gentoo/index.html" class="tagSizeLargest tagSize95" style="font-size: 100%;">gentoo</a></li>
	<li><a href="../../tag/hifi/index.html" class="tagSizeMedium tagSize21" style="font-size: 100%;">hifi</a></li>
	<li><a href="../../tag/ohjelmointi/index.html" class="tagSizeMedium tagSize32" style="font-size: 100%;">ohjelmointi</a></li>
	<li><a href="../../tag/opiskelu/index.html" class="tagSizeMedium tagSize7" style="font-size: 100%;">opiskelu</a></li>
	<li><a href="../../tag/ostoksia/index.html" class="tagSizeSmallest tagSize1" style="font-size: 100%;">ostoksia</a></li>
	<li><a href="../../tag/palvelin/index.html" class="tagSizeMedium tagSize27" style="font-size: 100%;">palvelin</a></li>
	<li><a href="../../tag/rauta/index.html" class="tagSizeMedium tagSize13" style="font-size: 100%;">rauta</a></li>
</ul>
        <p><a href="../../tag/index.html">Kaikki tagit</a></p>

        <form method="get" action="../../index.html">
<p class="search_input">Hae<br /><input type="text" value="" name="q" size="15" /></p>
</form>

        <p><a href="../../rss/index.html?section=mietteet" title="RSS 0.92">RSS</a> / <a href="../../atom/index.html?section=mietteet" title="Atom 1.0">Atom</a></p>
        <p class="linklist"><a href="http://textpattern.net/">TextBook</a><br /><a href="http://textpattern.com/">Textpattern</a><br /><a href="http://textpattern.org/">Txp Resources</a><br /><a href="http://twitter.com/progo_" title="Twitter-profiilini">Twitter</a><br /></p>

        <p><a href="http://textpattern.com/"><img src="../../images/2.png" alt="Textpattern CMS" width="105" height="45" /></a></p>
    </div>


<!-- center -->
    <div id="content">



<!-- not tag view, it's the main view -->


        

        <div class="hfeed">
            <!-- five articles to list here, or only one. It depends. -->
            <!-- default form -->

<p class="published">24. marraskuu 2009, 19:32</p>
<h1 class="entry-title"><a rel="bookmark" href="gnu-readline">GNU&#160;Readline</a></h1>


<div class="entry-content">
<p><a href="http://tiswww.case.edu/php/chet/readline/rltop.html">GNU Readline</a> on ohjelma, jonka yksinkertainen tehtävä on kysyä käyttäjältä syötettä, kenties pienen kysymyksen kera. Ja sen se yrittää tehdä niin hyvin kuin suinkin osaa. Ja mielestäni erittäin hyvin se suoriutuu hommistaan. Ohjelmaa kehittelevä <strong>Chet Ramey</strong> on myös <tt>bash</tt>in isiä. Ajattelisin, jos vaikka kertoilisin vähän ohjelmasta, sen käytöstä ja koodaamisestakin voisi turista.</p>
<p><!--more-->Mikäs tämmöisen simppelin ohjelman idea sitten on? Sen sijaan, että se yksinkertaisesti käärisi <code>getline()</code>-kutsun omaksi ohjelmakseen, se tukee valtavia määriä erilaisia hyödyllisiä näppäinkomentoja (olkoonkin Emacsista peräisin) ja kaikkea maan ja taivaan väliltä: <code>bash</code> yksinomaan hyödyntää vain readline-toimintoja komentorivillään, ja se kertoo osaltaan potentiaalista. On täydennystä, historiaa, hakuja takaa ja edestä, kopypaste, sanojen välillä hyppimistä. Nämä kaikki toiminnot on helppo saada omaankin CLI-ohjelmaan vain muutamalla kikkailulla ja käärimällä tarpeeksi toiminnallisuutta simppeleiksi funktioiksi; C:n ja C++:n tapauksessa kannattaa vähintään tehdä oma funktio sille, ja mieluummin ehkä luokka. PHP tukee tätä varsin sulavasti, kunhan kyseinen integraatio on käännetty mukaan.</p>
<p>Moni *NIX-käyttäjä varmasti tuntee monia ohjelmia, jotka käyttävät Readlineä, vaan eivät tiedä ohjelmien nimiä. Erilaiset shellit ovat etunenässä tämmöisiä. Toisaalta nimet, kuten <code>vi</code>, toimivat omien virittelyjensä päällä. <a>Wikipedia</a>ssa mainitaan, että Readlinen integrointi omiin sovelluksiin olisi työlästä, ja toisaalta sen GPL-lisensointi karkottaa muita toimijoita, joten en osaa kyllä heittää järkevää arvausta Readlinen levinneisyydestä ja käytöstä. Integroinnin työläydestä en tiedä, tein pari kokeilusoftaa, ja helpoksi minä tuota enimmälti sanoisin.</p>
<h2>Käyttö</h2>
<p>Koska jokainen tehobashisti epäilemättä hallitsee komentorivinsä lisäksi komentorivillä liikkumisen salat hyvin, käyn vain lyhyesti muutamia helpottavia asioita täältä sun sieltä. Ja eikä edes niitäkään tarvitse käydä, <a href="http://tiswww.case.edu/php/chet/readline/readline.html#SEC4">täällä</a> katetaan hyvien selostusten kanssa kaikki tarpeellinen.</p>
<p>Sen sijaan voin kertoa, mitä itse käyttelin kovasti, ennen kuin löysin readlinen kaikki piilotetut erikoisuudet. Ctrl-L on kovassa käytössä: se siis tyhjentää ruudun. Vastaa siis <code>clear</code>-komentoa, mutta komentoriviä ei tarvitse tyhjentää sen vuoksi. Lisäksi käyttelen paljon ehkä Windows-ajoilta tuttuja hyppelykäskyjä, eli Ctrl-nuolinäppäimet, jotka vastaavat sanojen välillä pomppimista. Annetut esimerkit, C-a, C-e, M-f ja M-b ovat ihan jees ratkaisut sille, kellä kyseiset kombinaatiot toimivat. Copypastetoiminnot olivat hämärässä minullakin, niistä löytyy tuolta osiosta 1.2.3. Olen paljon käytellyt historiahaussa PGup ja -down -komentoja siten, että kirjoitan rivin alkua, ja sitten PGup polkee kyseisillä merkeillä alkavia rivejä. (1.2.5 kuvailee näiden komentojen "oikeiksi" näppäinyhdistelmiksi C-r ja C-s.) Hyvin näppärää esimerkiksi g++- ja fg-rivien seassa; kun ylänuoli on vain liian työläs painaa kahdesti.</p>
<p>Jatketaan koodauksella.</p>
<h2>Koodaus</h2>
<h3>PHP</h3>
<p>Ensimmäinen paikka, jossa Readlineä piruuttani kokeilin käyttää, oli PHP-CLI -sovellus, kun en tiennyt muitakaan välineitä riviltälukemiseen. Koodi on petollisen simppeliä:</p>
<pre>$prompt = "What's your name? ";
$input  = readline($prompt);    // ja näin se sujuu PHP:ssä</pre>
<p>Jos halutaan lisäillä historiaa, tai sen sellaista mukaan, PHP:n <a href="http://php.net/manual/en/book.readline.php">dokumentaatio</a> auttaa. Esimerkiksi tiettyjen avainrivien lisäily siten, että niitä voi täydennellä tabilla (siis tyhjälle riville) on helpohko lisätä apufunktion avulla (ja tätä apufunktiota voi tietenkin täydentää antamaan mitä tahansa kontekstiriippuvaisestikin):</p>
<pre>public static function readlinetaydennys($str, $i) {
  return array("tässä on",
     "lista erilaisia",
	 "täydennettäviä",
	 "rivejä");
}
// ... myöhemmin alustuksessa
readline_completion_function('readlinetaydennys');</pre>
<p>Ja tämä PHP-ohjelma readlineä kutsuessaan voi täydentää annettuihin vaihtoehtoihin. Esimerkkifunktio on kovin staattinen, mutta mikään ei pakota sitä olemaan. Mielestäni jo yksin tämä Readline-integraatio toteutettuna näppärästi PHP:hen innostaa kokeilemaan PHP:n CLI-ominaisuuksia skriptiohjelmissa. Ei kotisivumoottoria tarvitse nettiin jättää. Tosin PHP:n muut ongelmat tekevät siitä tympeän muuhun käyttöön.</p>
<h3>C++</h3>
<p>Pitäähän omalla suosikillanikin kokeilla tätä. Tässä tulee opeteltua samaa tahtia kun kirjoitan tuotosta. Oppaat sanovat, että Readline varaa <code>malloc()</code>:lla merkkijonolle tilaa, ja se pitää itse vapauttaa tarpeen tullessa. Usein keosta nappaaminen ei ole tarpeen, tai ainakaan ei pitäisi jättää sitä ohjelmoijan harteille, joten tehdään jotain asialle C++-toteutuksessamme.</p>
<pre><span style="color: #87ceeb;">/*</span><span style="color: #87ceeb;"> Testailen GNU Readlinen integroimista C++-ohjelmaan </span><span style="color: #87ceeb;">*/</span>
<span style="color: #cd5c5c;">#include </span><span style="color: #ffa0a0;">&lt;iostream&gt;</span>
<span style="color: #cd5c5c;">#include </span><span style="color: #ffa0a0;">&lt;string&gt;</span>
<span style="color: #cd5c5c;">#include </span><span style="color: #ffa0a0;">&lt;cstdlib&gt;</span> <span style="color: #87ceeb;">// free()</span>
<span style="color: #bdb76b;"><strong>namespace</strong></span> std {
<span style="color: #cd5c5c;">    #include </span><span style="color: #ffa0a0;">&lt;readline/readline.h&gt;</span>
}

<span style="color: #87ceeb;">/*</span><span style="color: #87ceeb;"> C++-tyyliä kunnioittaen vain varmat ratkaisut. </span><span style="color: #87ceeb;">*/</span>
std::string readline(std::string prompt) {
    <span style="color: #bdb76b;"><strong>char</strong></span>* answer_c = std::readline(prompt.c_str());

    <span style="color: #87ceeb;">// Kopioidaan sisältö</span>
    std::string answer_cpp (answer_c);
    std::free(answer_c);
    <span style="color: #f0e68c;"><strong>return</strong></span> answer_cpp;
}

<span style="color: #bdb76b;"><strong>int</strong></span> main() {
    std::string foo = readline(<span style="color: #ffa0a0;">"Hei! "</span>);
    std::cout &lt;&lt; foo &lt;&lt; <span style="color: #ffa0a0;">' '</span> &lt;&lt; foo &lt;&lt; std::endl;
    <span style="color: #f0e68c;"><strong>return</strong></span> <span style="color: #ffa0a0;">0</span>;
}</pre>
<p>Kuten aavistelin, käyttö on melko selkeätä. Readlinen kirjastot saa mukaan <code>-lreadline</code> -pätkällä. Kuten PHP-pätkässäkin oli, kokeillaan lisätä myös tuota tabitäydennystä sekaan. Se näyttääkin jo enemmän purkalta johtuen kielten eroista. Readline vähän rumasti käyttelee globaaleja muuttujia, vaan mitenkäs muuten se kykenisi C:n kanssa toimimaan? Esitän muutokset edelläkäytyyn ohjelmaan. Tämä onkin jo vaativampi, ja monta asiaa pitää tehdä itse.</p>
<p>Esimerkiksi ei-kovin-c++:maisesti on tehty merkkijonojen pyörittely. Ellei ole keosta haalittu merkkijonoille tilaa, readlinessä tehtävä free()-kutsu aiheuttaa segfaultin. C++:ssa kun ei niin ole tarvetta aina ottaa dynaamista muistia, kun on <code>std::string</code> ja vektorit. Jouduin ottamaan mallia eräästä hyvästä <a href="http://cc.byexamples.com/20080616/gnu-readline-implement-custom-auto-complete/">lähteestä</a>.</p>
<p>Noniin, lisäkoodia: nämä funktiot ovat uusia:</p>
<pre><span style="color: #6495ed;"><strong>static</strong></span> <span style="color: #6495ed;"><strong>char</strong></span>** taydennys(<span style="color: #6495ed;"><strong>const</strong></span> <span style="color: #6495ed;"><strong>char</strong></span>* str, <span style="color: #6495ed;"><strong>int</strong></span> begin, <span style="color: #6495ed;"><strong>int</strong></span> end) {
    <span style="color: #6495ed;"><strong>return</strong></span> std::rl_completion_matches(<span style="color: #6495ed;"><strong>const_cast</strong></span>&lt;<span style="color: #6495ed;"><strong>char</strong></span>*&gt;(str), &amp;gen);
}

<span style="color: #666666;">// Generaattorimme tutkii, milloin on oikean rivin alkua täydennelty.</span>
<span style="color: #6495ed;"><strong>char</strong></span> *gen(<span style="color: #6495ed;"><strong>const</strong></span> <span style="color: #6495ed;"><strong>char</strong></span>* str, <span style="color: #6495ed;"><strong>int</strong></span> state) {
    <span style="color: #6495ed;"><strong>static</strong></span> <span style="color: #6495ed;"><strong>int</strong></span> length = <span style="color: #ffa0a0;">0</span>, index;
    <span style="color: #6495ed;"><strong>char</strong></span>* name;

    <span style="color: #666666;">// Olemmeko alussa?</span>
    <span style="color: #6495ed;"><strong>if</strong></span>(state == <span style="color: #ffa0a0;">0</span>) {
        index = <span style="color: #ffa0a0;">0</span>;
        length = std::strlen(str);
    }

    <span style="color: #666666;">// Etsimme kunkin komennon kohdalta, täsmääkö rivin alku mihinkään.</span>
    <span style="color: #666666;">// Jos tekee, varaamme muistia ja palautamme readlinelle</span>
    <span style="color: #6495ed;"><strong>while</strong></span>(name = <span style="color: #6495ed;"><strong>const_cast</strong></span>&lt;<span style="color: #6495ed;"><strong>char</strong></span>*&gt;(cmdlist[index].c_str())){
        index++;
        <span style="color: #6495ed;"><strong>if</strong></span>(std::strncmp(name, str, length) == <span style="color: #ffa0a0;">0</span>) {
            <span style="color: #6495ed;"><strong>char</strong></span> * rumajuttu = <span style="color: #6495ed;"><strong>static_cast</strong></span>&lt;<span style="color: #6495ed;"><strong>char</strong></span>*&gt;(malloc(std::strlen(name) + <span style="color: #ffa0a0;">1</span>));
            <span style="color: #6495ed;"><strong>if</strong></span>(rumajuttu != <span style="color: #ffa0a0;">0</span>) {
                std::strcpy(rumajuttu, name);
                <span style="color: #6495ed;"><strong>return</strong></span> rumajuttu;
            }
        }
    }
}</pre>
<p>Tämä globaali komentolista voisi olla erittäin hyvin myös funktionsa suojissa, mutta olkoon nyt tässä. Kaiken tilpehöörin keskellä kannattaa harkita käärimistä luokaksi. Seurasin tiiviisti opasta, ja samalla tuli myös itkettävän huonoa koodia (siis C-mäistä koodia).</p>
<pre>std::string cmdlist[] = {
    <span style="color: #87ceeb;">"First"</span>,
    <span style="color: #87ceeb;">"tayd2"</span>, <span style="color: #87ceeb;">"kolmas taydennys"</span>, <span style="color: #87ceeb;">"neljas vaihtoehto"</span>};</pre>
<p>Ja lopuksi pääohjelman alkuun tarvitaan kutsu liittää täydennysfunktio readlineen.</p>
<pre>    <span style="color: #666666;">// Kytketään täydennysfunktiomme readlineen.</span>
    std::rl_attempted_completion_function = taydennys;</pre>
<p>Koodista tuli nopeasti puuroa, ja <code>const_cast</code>:n käytöstä en ole ylpeä. Nähtävästi näin pitää kuitenkin toistaiseksi tehdä. Järkevämpää olisikin ollut oikeastaan etsiä C++-wrapperia tälle kirjastolle. Nyt tuli kuitenkin tehtyä tämäkin. Valgrindillä ajelin ympäriinsä, ei näytä vuotavan muistia (kumpikaan tapaus). Toivottavasti jollekulle on iloa tästä esimerkkikoodista. Hyvä malli on tuo lähteenä käytetty artikkeli ylempänä.</p>
<h2>Virittely</h2>
<p>No, nyt päästään tähän päivän varsinaiseen aiheeseen, eli kuulin, että Readlinen näppäinbindaukset voi muuttaa vastaamaan <code>vi</code>:tä! Tämä on riemastuttava ajatus, vaikka en usko ottavani sitä käyttöön (kuka tietää?)</p>
<p>Readline lukee asetuksia <code>/etc/inputrc</code>:stä ja vaihtoehtoisesti lisäksi käyttäjän kotihakemistosta, tosin tämä meni mutuiluksi. Readlinen <a href="http://tiswww.case.edu/php/chet/readline/readline.html">dokumentaatiossa</a> kuvaillaan tätä asetustiedostoa hyvin (ja mutuiluni sai faktaperää, jippii). En olekaan ennen ajatellutkaan, että readlinen näppäinbindit ovat todellakin varsin emacsmaiset. Sinänsä en koe asiaa ongelmaksi, sillä emacsin näppäimet ovat ihan kivat kyllä. Pitkissä hommissa modulaarinen asettelu on vain vähän mukavampi. (Tämänkin artikkelin kirjoittelin gvimillä.)</p>
<p>Vi-näppäimiin päästään nopeasti ja lupsakasti käsiksi lisäämällä vaikka sinne <code>~/.inputrc</code>-tiedostoon rivi <code>set editing-mode vi</code>. Tämä onkin ensimmäinen kerta, kun itsekin koittelen sitä. Selvästi toimii! Esimerkiksi kaikki liikekomennot ovat nätisti toiminnassa, ja erityisesti bash-koodaajia voi kiinnostaa komento `v', jolla readline avaa vi-instanssin (tosin nykydistroilla aina vimin) ja komentonsa saa rauhassa naputella. Moniriviset for-loopit on helppo kirjoitella  ylös!</p>
<p>Lisäksi edellisiä komentoja voi selailla luontevasti j- ja k-näppäimillä, kuten vi:ssä muutenkin selaillaan rivejä. Monia asioita pitää vain tosin etsiskellä, sillä olen tottunut readlinen käyttöön noiden erikoiskikkailujen kanssa: ^L toimii toki edelleen ruudun tyhjentämisessä, mutta nyt se pitää prefiksata escillä, jotta oltaisiin normaalimoodissa. Joitain asioita pitäisi etsiä, mutta hyvältä näyttää. Ja vaikka vi-mode ei kiinnostaisikaan, on dokumenteissa hyvät ohjeet uusien näppäinbindausten tekoon. Emacsin lähestymistapa on otettu kokonaan käyttöön, joten kustomoitavuutta on helppo saada aikaan. Saattaa olla, että jätän käyttöön, saattaa olla, että en. Joku indikaatio siitä, ollaanko lisäys- vai normaalimoodissa olisi paikallaan ainakin alustavasti.</p>
</div>

<p class="tags"> 


Tageja: <a href="../../tag/bash/index.html" rel="tag">bash</a>, 
<a href="../../tag/c++/index.html" rel="tag">c++</a>, 
<a href="../../tag/ohjelmointi/index.html" rel="tag">ohjelmointi</a>, 
<a href="../../tag/vim/index.html" rel="tag">vim</a>


</p>



<div class="divider"><img src="../../images/1.gif" alt="---" width="400" height="1" /></div>


        </div>

 <!-- now, common stuff -->

        <div class="divider"><img src="../../images/1.gif" alt="---" width="400" height="1" /></div>

        <p><a rel="prev" href="../19/pientae-css-saeaetoeae" title="Pientä CSS-säätöä">&#171; Pientä CSS-säätöä</a> 
           &mdash; <a rel="next" href="../17/taeydellinen-albumi" title="Täydellinen albumi?">Täydellinen albumi? &#187;</a>
        </p>

        <div class="divider"><img src="../../images/1.gif" alt="---" width="400" height="1" /></div>
        <h2>Aiheen vierestä</h2>
        <ul class="directory">

<li><span class="entry-title"><a rel="bookmark" href="../594/weboodi-aikataulut-orgiin">WebOodi-aikataulut&#160;orgiin</a></span> &#183; <span class="published">2012-10-23</span>
<br /><span class="smallexcerpt">Itä-Suomen yliopiston weboodissa alkaa olla aika usein kurssi-infot hyvässä kunnossa, ja nyt on myös joensuulaisille olemassa tuota lukkaria, joka on...</span>
</li>



<li><span class="entry-title"><a rel="bookmark" href="../593/emacsin-salat-alkavat-selvita-org-kovenee-ja-muita-tarinoita">Emacsin salat alkavat selvitä; org kovenee ja muita&#160;tarinoita</a></span> &#183; <span class="published">2012-10-17</span>
<br /><span class="smallexcerpt">Tässä on ihmetelty jo hyvän aikaa uusissa maailmoissa, ja pitkälle on päästy. En olisi itsestäni uskonut, että Emacsissa ollaan jonain...</span>
</li>



<li><span class="entry-title"><a rel="bookmark" href="../592/emacs-has-me">Emacs has&#160;me.</a></span> &#183; <span class="published">2012-09-22</span>
<br /><span class="smallexcerpt">Emacs alkaa ottaa otetta minusta. Olen yrittänyt olla pyristelemättä vastaan, eikä ole asiaa vastaan mitään sanottavaa. Kaikki ne herkut ja...</span>
</li>



<li><span class="entry-title"><a rel="bookmark" href="../591/editorien-taistelu-tietamyshallinnassa">Editorien taistelu&#160;tietämyshallinnassa</a></span> &#183; <span class="published">2012-09-14</span>
<br /><span class="smallexcerpt">Kun päädyin pari viikkoa sitten Org-formaattiin, oli se luonnollisesti edellytys, että Vim ja sen VimOrganizer saadaan kuntoon. Nyt kuitenkin on...</span>
</li>



<li><span class="entry-title"><a rel="bookmark" href="../590/think-vimorganizer">Think&#160;VimOrganizer.</a></span> &#183; <span class="published">2012-09-02</span>
<br /><span class="smallexcerpt">Asiat rullaavat eteenpäin tyydyttävää tahtia tämän uuden tiedonhallinnan kanssa. Nyt olen säätänyt kuntoon jokaisesta kulmasta toimivan org-capture -variantin, jolla saan...</span>
</li>



<li><span class="entry-title"><a rel="bookmark" href="../589/think-orgmode">Think&#160;orgmode.</a></span> &#183; <span class="published">2012-08-31</span>
<br /><span class="smallexcerpt">Teemme taas täyden ympyrän palatessamme orgmodeen, tuohon viha-rakkaussuhteen saaneeseen pakettiin. Edellinen thinktank-idea lopulta vääntyy siihen, että voin joko tehdä simppelin...</span>
</li>



<li><span class="entry-title"><a rel="bookmark" href="../587/tehokkaat-kayttoliittymat-vaivatta">Tehokkaat käyttöliittymät&#160;vaivatta</a></span> &#183; <span class="published">2012-08-16</span>
<br /><span class="smallexcerpt">Ohjelmoijan onni on elää komentorivillä. Tehokkaiden käyttöliittymien rustaaminen on varsin nopeata, kunhan luottaa siihen, että suurta suosiota tuotokset eivät tule...</span>
</li>



<li><span class="entry-title"><a rel="bookmark" href="../584/pythonin-vastaisku-lispeille-ipython-ja-vim-ipython">Pythonin vastaisku lispeille: IPython ja vim-ipython</a></span> &#183; <span class="published">2012-07-25</span>
<br /><span class="smallexcerpt">Tai &#8220;Pythonin uusi toivo&#8221; tai &#8220;Pythonin paluu&#8221;. Mistä on kyse? Pythonin tulkin me kaikki kai tiedämme: kaikki siinä periaatteessa on,...</span>
</li>



<li><span class="entry-title"><a rel="bookmark" href="../581/sumitup-puutteet-ja-mihin-suuntaan-edetaan">SumItUp: puutteet ja mihin suuntaan&#160;edetään</a></span> &#183; <span class="published">2012-07-12</span>
<br /><span class="smallexcerpt">Esittelin pari postausta sitten Soulver-kloonin raakileen, SumItUpin. Nyt se on GitHubissa kaikkien pällisteltävänä ja sellaisella raakileasteella, jotta sitä voi jo...</span>
</li>



<li><span class="entry-title"><a rel="bookmark" href="../579/soulver-kloonia-rakentelemassa">Soulver-kloonia&#160;rakentelemassa</a></span> &#183; <span class="published">2012-07-07</span>
<br /><span class="smallexcerpt">Erittäin upealla konseptilla varustettu laskinohjelma Soulver kaatuu siihen, että sen saa vain Mäkille. Vapaamuotoinen näpertelyalusta on usein ainut asia, mitä...</span>
</li>

</ul>

    </div>


<!-- footer -->
	<div id="foot">&nbsp;</div>

</div>

</body>
</html>
